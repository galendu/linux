name: pull

on:
  workflow_dispatch:     
    inputs:
      oldimage_name:
        description: '镜像地址'
        default: 'nginx busybox alpine'
      cpu_arch:
        description: '默认x86'
        default: 'amd64'
        type: choice
        options:
          - amd64
          - arm64
          - arm/v6
          - arm/v7
          - 386
          - s390
          - ppc64le
        
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: 拉取镜像并下载到本地
      run: |
        cpu_arch=${{ github.event.inputs.cpu_arch }}
        echo ${cpu_arch}
        for i in ${{ github.event.inputs.oldimage_name }}
        do
            docker pull $i --platform=${cpu_arch} 
            name=`echo $i | awk -F ':' '{print $1}'|awk -F '/' '{print $NF}'` 
            docker save $i -o $name.tar
        done
        mkdir artifacts
        mv *.tar artifacts/
    - name: Run Trivy scanner without downloading DBs
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'image'
        scan-ref: 'alpine'
        severity: "MEDIUM,HIGH,CRITICAL"
        scanners: "vuln"
      env:
        TRIVY_SKIP_DB_UPDATE: true
        TRIVY_SKIP_JAVA_DB_UPDATE: true
    - uses: actions/upload-artifact@v4
      with: 
        name: test
        path:  artifacts/*
        retention-days: 5
