name: 构建镜像

on:
  workflow_dispatch:
    inputs:
      packagefile_name:
        description: '包路径'
      dockerfile_path:
        description: 'dockerfile path'
        default: 'Dockerfile'
      server_name:
        description: '服务名称'
      shell_script:
        description: "shell脚本"
        default: "for i in `find ${{ github.event.inputs.dockerfile_path }} -name Dockerfile|grep -v fpm-a|xargs dirname`;do cd $i &&test=`echo $i|awk -F '/' '{print $NF}'` && docker build -t ${registry_repo}/$test:${image_tag}  . && docker push ${registry_repo}/$test:${image_tag} && docker save ${registry_repo}/$test:${image_tag} -o $test.tar && cd -;done"
#       tag_name:
#         description: '镜像tag'
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: |
        RED_COLOR='\E[1;31m'
        GREEN_COLOR='\E[1;31m'
        YELLOW_COLOR='\E[1;31m'
        BLUE_COLOR='\E[1;31m'
        RES='\E[1;31m'
        
        registry_repo='registry.cn-beijing.aliyuncs.com/duxiao'
        image_tag=`date +%Y%m%d%H%M%S`
        echo -e "${GREEN_COLOR}登录镜像仓库${RES}"
        docker login -u ${{ secrets.ALI_USER}} -p ${{ secrets.ALI_PASSWORD}} ${registry_repo}
        echo -e "${GREEN_COLOR}下载文件${RES}"
        wget ${{ github.event.inputs.packagefile_name }}|xargs  ls|xargs  unzip
        echo -e "${GREEN_COLOR}处理文件${RES}"
        ${{ github.event.inputs.shell_script }}
        mkdir artifacts
        find ${{ github.event.inputs.dockerfile_path }} -name *.tar |xargs -i cp {} artifacts/
    - uses: actions/upload-artifact@v2
      with: 
        name: artifacts
        path:  artifacts/*
